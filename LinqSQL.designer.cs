#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace PersonnelRecode
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="PersonInwork")]
	public partial class LinqSQLDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertT_AttendanceRevisionRecrd(T_AttendanceRevisionRecrd instance);
    partial void UpdateT_AttendanceRevisionRecrd(T_AttendanceRevisionRecrd instance);
    partial void DeleteT_AttendanceRevisionRecrd(T_AttendanceRevisionRecrd instance);
    partial void InsertT_ExpendRevisionRecord(T_ExpendRevisionRecord instance);
    partial void UpdateT_ExpendRevisionRecord(T_ExpendRevisionRecord instance);
    partial void DeleteT_ExpendRevisionRecord(T_ExpendRevisionRecord instance);
    partial void InsertT_IncomeRevisionRecord(T_IncomeRevisionRecord instance);
    partial void UpdateT_IncomeRevisionRecord(T_IncomeRevisionRecord instance);
    partial void DeleteT_IncomeRevisionRecord(T_IncomeRevisionRecord instance);
    #endregion
		
		public LinqSQLDataContext() : 
				base(global::PersonnelRecode.Properties.Settings.Default.PersonInworkConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LinqSQLDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqSQLDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqSQLDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqSQLDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<T_AttendanceRevisionRecrd> T_AttendanceRevisionRecrd
		{
			get
			{
				return this.GetTable<T_AttendanceRevisionRecrd>();
			}
		}
		
		public System.Data.Linq.Table<T_ExpendRevisionRecord> T_ExpendRevisionRecord
		{
			get
			{
				return this.GetTable<T_ExpendRevisionRecord>();
			}
		}
		
		public System.Data.Linq.Table<T_IncomeRevisionRecord> T_IncomeRevisionRecord
		{
			get
			{
				return this.GetTable<T_IncomeRevisionRecord>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_AttendanceRevisionRecrd")]
	public partial class T_AttendanceRevisionRecrd : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.DateTime _ChangeTime;
		
		private System.DateTime _AttendanceDate;
		
		private string _AttendanceOptions;
		
		private string _Oldvalue;
		
		private string _Newvalue;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnChangeTimeChanging(System.DateTime value);
    partial void OnChangeTimeChanged();
    partial void OnAttendanceDateChanging(System.DateTime value);
    partial void OnAttendanceDateChanged();
    partial void OnAttendanceOptionsChanging(string value);
    partial void OnAttendanceOptionsChanged();
    partial void OnOldvalueChanging(string value);
    partial void OnOldvalueChanged();
    partial void OnNewvalueChanging(string value);
    partial void OnNewvalueChanged();
    #endregion
		
		public T_AttendanceRevisionRecrd()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeTime", DbType="DateTime NOT NULL")]
		public System.DateTime ChangeTime
		{
			get
			{
				return this._ChangeTime;
			}
			set
			{
				if ((this._ChangeTime != value))
				{
					this.OnChangeTimeChanging(value);
					this.SendPropertyChanging();
					this._ChangeTime = value;
					this.SendPropertyChanged("ChangeTime");
					this.OnChangeTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttendanceDate", DbType="Date NOT NULL")]
		public System.DateTime AttendanceDate
		{
			get
			{
				return this._AttendanceDate;
			}
			set
			{
				if ((this._AttendanceDate != value))
				{
					this.OnAttendanceDateChanging(value);
					this.SendPropertyChanging();
					this._AttendanceDate = value;
					this.SendPropertyChanged("AttendanceDate");
					this.OnAttendanceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttendanceOptions", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string AttendanceOptions
		{
			get
			{
				return this._AttendanceOptions;
			}
			set
			{
				if ((this._AttendanceOptions != value))
				{
					this.OnAttendanceOptionsChanging(value);
					this.SendPropertyChanging();
					this._AttendanceOptions = value;
					this.SendPropertyChanged("AttendanceOptions");
					this.OnAttendanceOptionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Oldvalue", DbType="NVarChar(20)")]
		public string Oldvalue
		{
			get
			{
				return this._Oldvalue;
			}
			set
			{
				if ((this._Oldvalue != value))
				{
					this.OnOldvalueChanging(value);
					this.SendPropertyChanging();
					this._Oldvalue = value;
					this.SendPropertyChanged("Oldvalue");
					this.OnOldvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Newvalue", DbType="NVarChar(20)")]
		public string Newvalue
		{
			get
			{
				return this._Newvalue;
			}
			set
			{
				if ((this._Newvalue != value))
				{
					this.OnNewvalueChanging(value);
					this.SendPropertyChanging();
					this._Newvalue = value;
					this.SendPropertyChanged("Newvalue");
					this.OnNewvalueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_ExpendRevisionRecord")]
	public partial class T_ExpendRevisionRecord : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.DateTime _ChangeTime;
		
		private int _ExpendId;
		
		private System.DateTime _ExpendDate;
		
		private string _ExpendOptions;
		
		private string _Oldvalue;
		
		private string _Newvalue;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnChangeTimeChanging(System.DateTime value);
    partial void OnChangeTimeChanged();
    partial void OnExpendIdChanging(int value);
    partial void OnExpendIdChanged();
    partial void OnExpendDateChanging(System.DateTime value);
    partial void OnExpendDateChanged();
    partial void OnExpendOptionsChanging(string value);
    partial void OnExpendOptionsChanged();
    partial void OnOldvalueChanging(string value);
    partial void OnOldvalueChanged();
    partial void OnNewvalueChanging(string value);
    partial void OnNewvalueChanged();
    #endregion
		
		public T_ExpendRevisionRecord()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeTime", DbType="DateTime NOT NULL")]
		public System.DateTime ChangeTime
		{
			get
			{
				return this._ChangeTime;
			}
			set
			{
				if ((this._ChangeTime != value))
				{
					this.OnChangeTimeChanging(value);
					this.SendPropertyChanging();
					this._ChangeTime = value;
					this.SendPropertyChanged("ChangeTime");
					this.OnChangeTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpendId", DbType="Int NOT NULL")]
		public int ExpendId
		{
			get
			{
				return this._ExpendId;
			}
			set
			{
				if ((this._ExpendId != value))
				{
					this.OnExpendIdChanging(value);
					this.SendPropertyChanging();
					this._ExpendId = value;
					this.SendPropertyChanged("ExpendId");
					this.OnExpendIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpendDate", DbType="Date NOT NULL")]
		public System.DateTime ExpendDate
		{
			get
			{
				return this._ExpendDate;
			}
			set
			{
				if ((this._ExpendDate != value))
				{
					this.OnExpendDateChanging(value);
					this.SendPropertyChanging();
					this._ExpendDate = value;
					this.SendPropertyChanged("ExpendDate");
					this.OnExpendDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpendOptions", DbType="NVarChar(20)")]
		public string ExpendOptions
		{
			get
			{
				return this._ExpendOptions;
			}
			set
			{
				if ((this._ExpendOptions != value))
				{
					this.OnExpendOptionsChanging(value);
					this.SendPropertyChanging();
					this._ExpendOptions = value;
					this.SendPropertyChanged("ExpendOptions");
					this.OnExpendOptionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Oldvalue", DbType="NVarChar(20)")]
		public string Oldvalue
		{
			get
			{
				return this._Oldvalue;
			}
			set
			{
				if ((this._Oldvalue != value))
				{
					this.OnOldvalueChanging(value);
					this.SendPropertyChanging();
					this._Oldvalue = value;
					this.SendPropertyChanged("Oldvalue");
					this.OnOldvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Newvalue", DbType="NVarChar(20)")]
		public string Newvalue
		{
			get
			{
				return this._Newvalue;
			}
			set
			{
				if ((this._Newvalue != value))
				{
					this.OnNewvalueChanging(value);
					this.SendPropertyChanging();
					this._Newvalue = value;
					this.SendPropertyChanged("Newvalue");
					this.OnNewvalueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_IncomeRevisionRecord")]
	public partial class T_IncomeRevisionRecord : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.DateTime _ChangeTime;
		
		private int _IncomeId;
		
		private System.DateTime _IncomeDate;
		
		private string _IncomeOptions;
		
		private string _Oldvalue;
		
		private string _Newvalue;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnChangeTimeChanging(System.DateTime value);
    partial void OnChangeTimeChanged();
    partial void OnIncomeIdChanging(int value);
    partial void OnIncomeIdChanged();
    partial void OnIncomeDateChanging(System.DateTime value);
    partial void OnIncomeDateChanged();
    partial void OnIncomeOptionsChanging(string value);
    partial void OnIncomeOptionsChanged();
    partial void OnOldvalueChanging(string value);
    partial void OnOldvalueChanged();
    partial void OnNewvalueChanging(string value);
    partial void OnNewvalueChanged();
    #endregion
		
		public T_IncomeRevisionRecord()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeTime", DbType="DateTime NOT NULL")]
		public System.DateTime ChangeTime
		{
			get
			{
				return this._ChangeTime;
			}
			set
			{
				if ((this._ChangeTime != value))
				{
					this.OnChangeTimeChanging(value);
					this.SendPropertyChanging();
					this._ChangeTime = value;
					this.SendPropertyChanged("ChangeTime");
					this.OnChangeTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IncomeId", DbType="Int NOT NULL")]
		public int IncomeId
		{
			get
			{
				return this._IncomeId;
			}
			set
			{
				if ((this._IncomeId != value))
				{
					this.OnIncomeIdChanging(value);
					this.SendPropertyChanging();
					this._IncomeId = value;
					this.SendPropertyChanged("IncomeId");
					this.OnIncomeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IncomeDate", DbType="Date NOT NULL")]
		public System.DateTime IncomeDate
		{
			get
			{
				return this._IncomeDate;
			}
			set
			{
				if ((this._IncomeDate != value))
				{
					this.OnIncomeDateChanging(value);
					this.SendPropertyChanging();
					this._IncomeDate = value;
					this.SendPropertyChanged("IncomeDate");
					this.OnIncomeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IncomeOptions", DbType="NVarChar(20)")]
		public string IncomeOptions
		{
			get
			{
				return this._IncomeOptions;
			}
			set
			{
				if ((this._IncomeOptions != value))
				{
					this.OnIncomeOptionsChanging(value);
					this.SendPropertyChanging();
					this._IncomeOptions = value;
					this.SendPropertyChanged("IncomeOptions");
					this.OnIncomeOptionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Oldvalue", DbType="NVarChar(20)")]
		public string Oldvalue
		{
			get
			{
				return this._Oldvalue;
			}
			set
			{
				if ((this._Oldvalue != value))
				{
					this.OnOldvalueChanging(value);
					this.SendPropertyChanging();
					this._Oldvalue = value;
					this.SendPropertyChanged("Oldvalue");
					this.OnOldvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Newvalue", DbType="NVarChar(20)")]
		public string Newvalue
		{
			get
			{
				return this._Newvalue;
			}
			set
			{
				if ((this._Newvalue != value))
				{
					this.OnNewvalueChanging(value);
					this.SendPropertyChanging();
					this._Newvalue = value;
					this.SendPropertyChanged("Newvalue");
					this.OnNewvalueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
